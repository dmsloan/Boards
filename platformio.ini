; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs                      = esp32dev
;default_envs                      = featheresp32
;default_envs                      = heltec_wifi_lora_32
;default_envs                      = heltec_wifi_lora_32_V2
;default_envs                      = lolin32
;default_envs                      = nanoatmega328
;default_envs                      = TTGOBatteryOLED
; Global data for all [env        : ***]

[common]

[env]
framework = arduino

; Library options
lib_deps =
;                                  paulstoffregen/Encoder @ ^1.4.2
;                                  adafruit/Adafruit INA219 @ ^1.2.0
;                                  ottowinter/ESPAsyncWebServer-esphome @ ^1.2.7
;                                  OLED display
;                                  U8g2@^2.27.0
;                                  fastled/FastLED@^3.3.3
;                                  adafruit/Adafruit ADS1X15 @ ^1.1.2
;                                  sparkfun/SparkFun MicroPressure Library @ ^1.0.1
;                                  SPI
;                                  adafruit/Adafruit Unified Sensor @ ^1.1.5 // does not need to be installed. It will be installed automatically when needed.
;                                  arduino-libraries/Arduino_JSON @ ^0.1.0
;                                  adafruit/Adafruit BME280 Library @ ^2.2.2
;                                  adafruit/Adafruit BMP280 Library @ ^2.6.2
;                                  adafruit/Adafruit MPRLS Library @ ^1.2.0

; Serial Monitor options
monitor_speed =                   115200
;monitor_raw =                     yes ;Do not apply any encodings/transformations. outputs in color Do not use this if you use "direct" in monitor_filters, may be used in 2023
monitor_filters = 
                                    direct ;Do-nothing: forward all data unchanged. Useful if data already contains ANSI escape codes (colors) Ex  Serial.print("\033[1;32m") Set terminal color to green
;                                    default ;Remove typical terminal control codes from input
;                                    debug ;Print what is sent and received
;                                    hexlify ;Show a hexadecimal representation of the data (code point of each character)
;                                    log2file ;Log data to a file “platformio-device-monitor-%date%.log” located in the current working directory
;                                    nocontrol ;Remove all control codes, incl. CR+LF
;                                    printable ;Show decimal code for all non-ASCII characters and replace most control codes
;                                    time ;Add timestamp with milliseconds for each new line
;                                    send_on_enter ;Send a text to device on ENTER
;                                    esp32_exception_decoder ;Custom filter for Espressif 32 which decodes crash exception
;                                    esp8266_exception_decoder ;Custom filter for Espressif 8266 which decodes crash exception

; Verbose
build_flags = -DCORE_DEBUG_LEVEL=5

;Possible values for board_build.filesystem are spiffs (default), littlefs and fatfs.
;board_build.filesystem = littlefs

[env:esp32dev]
platform                          = espressif32
board                             = esp32dev
;upload_protocol                   = espota
;upload_port                       = 192.168.1.46
;upload_flags                      = spiffs 

[env:heltec_wifi_lora_32]
platform                          = espressif32
board                             = heltec_wifi_lora_32

[env:heltec_wifi_lora_32_V2]
platform                          = espressif32
board                             = heltec_wifi_lora_32_V2

[env:lolin32]
platform                          = espressif32
board                             = lolin32

[env:TTGOBatteryOLED]
platform                          = espressif32
board                             = pocket_32

[env:featheresp32]
platform                          = espressif32
board                             = featheresp32

[env:nanoatmega328]
platform                          = atmelavr
board                             = nanoatmega328
platform_packages                 =
                                  ; use GCC AVR 7.3.0+
                                  toolchain-atmelavr@>=1.70300.0